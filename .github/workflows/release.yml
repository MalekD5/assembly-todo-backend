name: Build & Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up NASM
      uses: ilammy/setup-nasm@v1

    - name: Verify NASM and GCC
      run: |
        nasm -v
        gcc --version
      shell: pwsh

    - name: Prepare output directory
      run: mkdir dist
      shell: pwsh

    - name: Build project
      run: |
        make build
      shell: pwsh

    - name: Copy output binary
      id: bin
      run: |
        Copy-Item .\dist\backend.exe $env:RUNNER_TEMP\backend.exe
        echo "path=$env:RUNNER_TEMP\backend.exe" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Set version tag
      id: version
      run: |
        $date = Get-Date -Format "yyyyMMdd"
        $patch = $env:GITHUB_RUN_NUMBER
        $tag = "v1.0.$patch-$date"
        echo "tag=$tag" >> $env:GITHUB_OUTPUT
        echo "name=Release $tag" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Generate changelog from commits
      id: changelog
      run: |
        git fetch --tags
        $lastTag = git tag --sort=-creatordate | Select-Object -First 1
        "@## Changes`n" | Out-File changelog.md -Encoding UTF8

        if (-not $lastTag) {
          git log --pretty=format:"- %s" | Out-File -Append changelog.md -Encoding UTF8
        } else {
          git log "$lastTag"..HEAD --pretty=format:"- %s" | Out-File -Append changelog.md -Encoding UTF8
        }
      shell: pwsh

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.version.outputs.tag }}
        name: ${{ steps.version.outputs.name }}
        artifacts: ${{ steps.bin.outputs.path }}
        bodyFile: changelog.md
        generateReleaseNotes: true
